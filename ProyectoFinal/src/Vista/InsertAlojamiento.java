/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import AccesoDatos.CiudadData;
import AccesoDatos.Conexion;
import AccesoDatos.alojamientoData;
import Entidades.Alojamiento;
import Entidades.Ciudad;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/*
 *
 * @author HP
 */
public class InsertAlojamiento extends javax.swing.JInternalFrame {

    /**
     * Creates new form InsertAlojamiento
     */
    public InsertAlojamiento() {
        initComponents();
        
       
        
        CiudadData ciudadData = new CiudadData(Conexion.getConexion()); 

        DefaultComboBoxModel<String> ciudadModel = new DefaultComboBoxModel<>();
        List<Ciudad> ciudades = ciudadData.listarCiudad(); 

        for (Ciudad ciudad : ciudades) {
        ciudadModel.addElement(ciudad.getNombre());
        }
        jcbCiudad.setModel(ciudadModel);
        
        DefaultComboBoxModel<String> estadoModel = new DefaultComboBoxModel<>();
        estadoModel.addElement("0"); // Agregar "0" al modelo
        estadoModel.addElement("1"); // Agregar "1" al modelo
        jcbEstado.setModel(estadoModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jDCfechaI = new com.toedter.calendar.JDateChooser();
        jDCfechaV = new com.toedter.calendar.JDateChooser();
        tipoAlojamiento = new javax.swing.JTextField();
        servicios = new javax.swing.JTextField();
        importe = new javax.swing.JTextField();
        jcbEstado = new javax.swing.JComboBox<>();
        jcbCiudad = new javax.swing.JComboBox<>();
        Insert = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Nuevo Alojamiento");

        jLabel2.setText("Fecha de ida:");

        jLabel3.setText("Fecha de vuelta:");

        jLabel4.setText("Tipo de alojamiento:");

        jLabel5.setText("Servicios:");

        jLabel6.setText("Importe:");

        jLabel7.setText("Ciudad:");

        jLabel8.setText("Estado:");

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcbCiudad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        Insert.setText("Insert");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tipoAlojamiento)
                            .addComponent(servicios)
                            .addComponent(importe)
                            .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbCiudad, 0, 121, Short.MAX_VALUE))
                        .addGap(0, 120, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDCfechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDCfechaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(13, 13, 13))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38))))
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDCfechaI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDCfechaV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tipoAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(servicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(importe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Insert)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:
     
         
     String tipoAlojamientos = tipoAlojamiento.getText();
     String serviciosAlojamiento = servicios.getText();
     String importeText = importe.getText();
     
     if (tipoAlojamientos.isEmpty() || serviciosAlojamiento.isEmpty() || importeText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
        return; // Salir del método si hay campos faltantes
        }
     
     
     double importeAlojamiento = Double.parseDouble(importeText);
     
     
     java.util.Date utilFechaI = jDCfechaI.getDate();
     java.util.Date utilFechaF = jDCfechaV.getDate();
     LocalDate fechaI = utilFechaI.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
     LocalDate fechaF = utilFechaF.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();  
     String nombreCiudad = (String) jcbCiudad.getSelectedItem();
     
     Ciudad ciudad = new Ciudad(); // Crea una instancia válida de Ciudad
     Alojamiento alojamiento = new Alojamiento(ciudad); // Pasa la Ciudad al constructor de Alojamiento

    
     
     CiudadData ciudadData = new CiudadData(Conexion.getConexion());
     ciudad = ciudadData.buscarCiudadPorNombre(nombreCiudad);

     String estadoAlojamiento = (String) jcbEstado.getSelectedItem();
     boolean estado = estadoAlojamiento.equals("1");
   
     
     if (ciudad != null) {
      alojamiento.setCiudad(ciudad);
      }else {
      JOptionPane.showMessageDialog(null, "No se encuentra la ciudad");
     }
     if (alojamiento != null) {
    // Accede a las propiedades y métodos de alojamiento
     } else {
    JOptionPane.showMessageDialog(null, "El objeto de alojamiento es nulo");
    }

     alojamiento.setTipo(tipoAlojamientos);
     alojamiento.setServicio(serviciosAlojamiento);
     alojamiento.setImporteDiario(importeAlojamiento);
     alojamiento.setFechaF(fechaF);
     alojamiento.setFechaI(fechaI);
     alojamiento.setCiudad(ciudad);
     alojamiento.setEstado(estado);
    
     alojamientoData AlojamientoData = new alojamientoData(Conexion.getConexion()); // Cambio en la inicialización

     try {
     alojamientoData.agregarAlojamiento(alojamiento); // Cambio en la variable
     JOptionPane.showMessageDialog(this, "Alojamiento agregado correctamente");
     } catch (SQLException ex) {
     JOptionPane.showMessageDialog(this, "Error al agregar alojamiento: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
     alojamiento.setCiudad(ciudad);
     
     Ciudad ciudadAsociada = alojamiento.getCiudad();
     
     // Verificar si los campos están vacíos o son nulos
   
    }//GEN-LAST:event_InsertActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Insert;
    private javax.swing.JTextField importe;
    private com.toedter.calendar.JDateChooser jDCfechaI;
    private com.toedter.calendar.JDateChooser jDCfechaV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JComboBox<String> jcbCiudad;
    private javax.swing.JComboBox<String> jcbEstado;
    private javax.swing.JTextField servicios;
    private javax.swing.JTextField tipoAlojamiento;
    // End of variables declaration//GEN-END:variables
}
